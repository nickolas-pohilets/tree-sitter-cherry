===
Misc
===
var x = 5
let z = true
var q: Int = -1
var a1: [Int] = [
    5, 12
    42, 11, 
    20, 20
]
var a2: [Int] = []
var a3: [Int] = [1]
var a4: [Int] = [1,]
var a5: [Int] = [1,2]
var a6: [Int] = [1,2,]
func foo() -> Bool {}

---
(source_file
      (variable_declaration
        name: (identifier)
        initial_value: (integer_literal))
      (variable_declaration
        name: (identifier)
        initial_value: (bool_literal))
      (variable_declaration
        name: (identifier)
        type: (builtin_type)
        initial_value: (integer_literal))
      (variable_declaration
        name: (identifier)
        type: (array_type
          (builtin_type))
        initial_value: (array_literal
          (integer_literal)
          (integer_literal)
          (integer_literal)
          (integer_literal)
          (integer_literal)
          (integer_literal)))
      (variable_declaration
        name: (identifier)
        type: (array_type
          (builtin_type))
        initial_value: (array_literal))
      (variable_declaration
        name: (identifier)
        type: (array_type
          (builtin_type))
        initial_value: (array_literal
          (integer_literal)))
      (variable_declaration
        name: (identifier)
        type: (array_type
          (builtin_type))
        initial_value: (array_literal
          (integer_literal)))
      (variable_declaration
        name: (identifier)
        type: (array_type
          (builtin_type))
        initial_value: (array_literal
          (integer_literal)
          (integer_literal)))
      (variable_declaration
        name: (identifier)
        type: (array_type
          (builtin_type))
        initial_value: (array_literal
          (integer_literal)
          (integer_literal)))
      (function_declaration
        name: (identifier)
        params: (parameter_list)
        (builtin_type)
        body: (block)))
